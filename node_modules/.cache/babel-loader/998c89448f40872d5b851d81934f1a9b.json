{"ast":null,"code":"var _jsxFileName = \"/Users/yasmeen/cleanfolio/src/contexts/theme.js\";\nimport { createContext, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nconst ThemeContext = createContext();\nconst ThemeProvider = ({\n  children\n}) => {\n  const [themeName, setThemeName] = useState('light');\n  useEffect(() => {\n    const darkMediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n    setThemeName(darkMediaQuery.matches ? 'dark' : 'light');\n    darkMediaQuery.addEventListener('change', e => {\n      setThemeName(e.matches ? 'dark' : 'light');\n    });\n  }, []);\n  const toggleTheme = () => {\n    const name = themeName === 'dark' ? 'light' : 'dark';\n    localStorage.setItem('themeName', name);\n    setThemeName(name);\n  };\n  return /*#__PURE__*/React.createElement(ThemeContext.Provider, {\n    value: [{\n      themeName,\n      toggleTheme\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, children);\n};\nThemeProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport { ThemeProvider, ThemeContext };","map":{"version":3,"names":["createContext","useEffect","useState","PropTypes","React","ThemeContext","ThemeProvider","children","themeName","setThemeName","darkMediaQuery","window","matchMedia","matches","addEventListener","e","toggleTheme","name","localStorage","setItem","createElement","Provider","value","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","propTypes","node","isRequired"],"sources":["/Users/yasmeen/cleanfolio/src/contexts/theme.js"],"sourcesContent":["import { createContext, useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport React from 'react';\n\nconst ThemeContext = createContext()\n\nconst ThemeProvider = ({ children }) => {\n  const [themeName, setThemeName] = useState('light')\n\n  useEffect(() => {\n    const darkMediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n    setThemeName(darkMediaQuery.matches ? 'dark' : 'light')\n    darkMediaQuery.addEventListener('change', (e) => {\n      setThemeName(e.matches ? 'dark' : 'light')\n    });\n  }, [])\n\n  const toggleTheme = () => {\n    const name = themeName === 'dark' ? 'light' : 'dark'\n    localStorage.setItem('themeName', name)\n    setThemeName(name)\n  }\n\n  return (\n    <ThemeContext.Provider value={[{ themeName, toggleTheme }]}>\n      {children}\n    </ThemeContext.Provider>\n  )\n}\n\nThemeProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport { ThemeProvider, ThemeContext }\n"],"mappings":";AAAA,SAASA,aAAa,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAGL,aAAa,CAAC,CAAC;AAEpC,MAAMM,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EACtC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,OAAO,CAAC;EAEnDD,SAAS,CAAC,MAAM;IACd,MAAMS,cAAc,GAAGC,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC;IACxEH,YAAY,CAACC,cAAc,CAACG,OAAO,GAAG,MAAM,GAAG,OAAO,CAAC;IACvDH,cAAc,CAACI,gBAAgB,CAAC,QAAQ,EAAGC,CAAC,IAAK;MAC/CN,YAAY,CAACM,CAAC,CAACF,OAAO,GAAG,MAAM,GAAG,OAAO,CAAC;IAC5C,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,IAAI,GAAGT,SAAS,KAAK,MAAM,GAAG,OAAO,GAAG,MAAM;IACpDU,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEF,IAAI,CAAC;IACvCR,YAAY,CAACQ,IAAI,CAAC;EACpB,CAAC;EAED,oBACEb,KAAA,CAAAgB,aAAA,CAACf,YAAY,CAACgB,QAAQ;IAACC,KAAK,EAAE,CAAC;MAAEd,SAAS;MAAEQ;IAAY,CAAC,CAAE;IAAAO,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACxDrB,QACoB,CAAC;AAE5B,CAAC;AAEDD,aAAa,CAACuB,SAAS,GAAG;EACxBtB,QAAQ,EAAEJ,SAAS,CAAC2B,IAAI,CAACC;AAC3B,CAAC;AAED,SAASzB,aAAa,EAAED,YAAY"},"metadata":{},"sourceType":"module"}