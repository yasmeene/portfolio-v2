{"ast":null,"code":"var _jsxFileName = \"/Users/yasmeen/cleanfolio/src/components/Fade.tsx\";\nimport React, { useRef, useEffect } from 'react';\nimport './App.css';\nconst FadeInSection = ({\n  children\n}) => {\n  const sectionRef = useRef(null);\n  const observer = useRef(null);\n  useEffect(() => {\n    var _observer$current;\n    observer.current = new IntersectionObserver(entries => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          entry.target.classList.add('fade-in');\n        } else {\n          entry.target.classList.remove('fade-in');\n        }\n      });\n    });\n    (_observer$current = observer.current) === null || _observer$current === void 0 ? void 0 : _observer$current.observe(sectionRef.current);\n    return () => {\n      var _observer$current2;\n      // Clean up the observer when the component is unmounted\n      (_observer$current2 = observer.current) === null || _observer$current2 === void 0 ? void 0 : _observer$current2.disconnect();\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"section\", {\n    ref: sectionRef,\n    className: \"fade-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 10\n    }\n  }, children);\n};\nexport default FadeInSection;","map":{"version":3,"names":["React","useRef","useEffect","FadeInSection","children","sectionRef","observer","_observer$current","current","IntersectionObserver","entries","forEach","entry","isIntersecting","target","classList","add","remove","observe","_observer$current2","disconnect","createElement","ref","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/yasmeen/cleanfolio/src/components/Fade.tsx"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport './App.css';\n\ninterface FadeInSectionProps {\n  children: React.ReactNode;\n}\n\nconst FadeInSection: React.FC<FadeInSectionProps> = ({ children }) => {\n  const sectionRef = useRef<HTMLElement | null>(null);\n  const observer = useRef<IntersectionObserver | null>(null);\n\n  useEffect(() => {\n    observer.current = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          entry.target.classList.add('fade-in');\n        } else {\n          entry.target.classList.remove('fade-in');\n        }\n      });\n    });\n\n    observer.current?.observe(sectionRef.current!);\n\n    return () => {\n      // Clean up the observer when the component is unmounted\n      observer.current?.disconnect();\n    };\n  }, []);\n\n  return <section ref={sectionRef} className=\"fade-section\">{children}</section>;\n};\n\nexport default FadeInSection;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAChD,OAAO,WAAW;AAMlB,MAAMC,aAA2C,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EACpE,MAAMC,UAAU,GAAGJ,MAAM,CAAqB,IAAI,CAAC;EACnD,MAAMK,QAAQ,GAAGL,MAAM,CAA8B,IAAI,CAAC;EAE1DC,SAAS,CAAC,MAAM;IAAA,IAAAK,iBAAA;IACdD,QAAQ,CAACE,OAAO,GAAG,IAAIC,oBAAoB,CAAEC,OAAO,IAAK;MACvDA,OAAO,CAACC,OAAO,CAAEC,KAAK,IAAK;QACzB,IAAIA,KAAK,CAACC,cAAc,EAAE;UACxBD,KAAK,CAACE,MAAM,CAACC,SAAS,CAACC,GAAG,CAAC,SAAS,CAAC;QACvC,CAAC,MAAM;UACLJ,KAAK,CAACE,MAAM,CAACC,SAAS,CAACE,MAAM,CAAC,SAAS,CAAC;QAC1C;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;IAEF,CAAAV,iBAAA,GAAAD,QAAQ,CAACE,OAAO,cAAAD,iBAAA,uBAAhBA,iBAAA,CAAkBW,OAAO,CAACb,UAAU,CAACG,OAAQ,CAAC;IAE9C,OAAO,MAAM;MAAA,IAAAW,kBAAA;MACX;MACA,CAAAA,kBAAA,GAAAb,QAAQ,CAACE,OAAO,cAAAW,kBAAA,uBAAhBA,kBAAA,CAAkBC,UAAU,CAAC,CAAC;IAChC,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOpB,KAAA,CAAAqB,aAAA;IAASC,GAAG,EAAEjB,UAAW;IAACkB,SAAS,EAAC,cAAc;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAEzB,QAAkB,CAAC;AAChF,CAAC;AAED,eAAeD,aAAa"},"metadata":{},"sourceType":"module"}